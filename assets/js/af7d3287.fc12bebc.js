"use strict";(self.webpackChunkpathom_3_docs=self.webpackChunkpathom_3_docs||[]).push([[541],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>u});var o=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=o.createContext({}),p=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},d=function(e){var n=p(e.components);return o.createElement(s.Provider,{value:n},e.children)},l="mdxType",h={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},m=o.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),l=p(t),m=a,u=l["".concat(s,".").concat(m)]||l[m]||h[m]||r;return t?o.createElement(u,c(c({ref:n},d),{},{components:t})):o.createElement(u,c({ref:n},d))}));function u(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,c=new Array(r);c[0]=m;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i[l]="string"==typeof e?e:a,c[1]=i;for(var p=2;p<r;p++)c[p]=t[p];return o.createElement.apply(null,c)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},8222:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>p});var o=t(7462),a=(t(7294),t(3905));const r={id:"environment",title:"Environment"},c=void 0,i={unversionedId:"environment",id:"environment",title:"Environment",description:"The environment is a map containing contextual information, both from Pathom itself",source:"@site/docs/environment.mdx",sourceDirName:".",slug:"/environment",permalink:"/docs/environment",draft:!1,editUrl:"https://github.com/wilkerlucio/pathom3-docs/edit/master/docs/environment.mdx",tags:[],version:"current",frontMatter:{id:"environment",title:"Environment"},sidebar:"docs",previous:{title:"EQL",permalink:"/docs/eql"},next:{title:"Cache",permalink:"/docs/cache"}},s={},p=[{value:"Native features on environment",id:"native-features-on-environment",level:2},{value:"Entity",id:"entity",level:3},{value:"<code>:com.wsscode.pathom3.entity-tree/entity-tree*</code>",id:"comwsscodepathom3entity-treeentity-tree",level:4},{value:"Errors",id:"errors",level:3},{value:"<code>:com.wsscode.pathom3.error/lenient-mode?</code>",id:"comwsscodepathom3errorlenient-mode",level:4},{value:"Indexes",id:"indexes",level:3},{value:"<code>:com.wsscode.pathom3.connect.indexes/index-attributes</code>",id:"comwsscodepathom3connectindexesindex-attributes",level:4},{value:"<code>:com.wsscode.pathom3.connect.indexes/index-io</code>",id:"comwsscodepathom3connectindexesindex-io",level:4},{value:"<code>:com.wsscode.pathom3.connect.indexes/index-oir</code>",id:"comwsscodepathom3connectindexesindex-oir",level:4},{value:"<code>:com.wsscode.pathom3.connect.indexes/index-resolvers</code>",id:"comwsscodepathom3connectindexesindex-resolvers",level:4},{value:"Path",id:"path",level:3},{value:"<code>:com.wsscode.pathom3.path/path</code>",id:"comwsscodepathom3pathpath",level:4},{value:"Planner",id:"planner",level:3},{value:"<code>:com.wsscode.pathom3.connect.planner/graph</code>",id:"comwsscodepathom3connectplannergraph",level:4},{value:"<code>:com.wsscode.pathom3.connect.planner/node</code>",id:"comwsscodepathom3connectplannernode",level:4},{value:"<code>:com.wsscode.pathom3.connect.planner/plan-cache*</code>",id:"comwsscodepathom3connectplannerplan-cache",level:4}],d={toc:p},l="wrapper";function h(e){let{components:n,...t}=e;return(0,a.kt)(l,(0,o.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The environment is a map containing contextual information, both from Pathom itself\nand from any user/library extensions."),(0,a.kt)("p",null,"Given the environment is a generic and open map, it makes more sense to talk about\nwhat features of Pathom you can see and interact with."),(0,a.kt)("p",null,"You can always add more things to the environment to suite your own needs."),(0,a.kt)("h2",{id:"native-features-on-environment"},"Native features on environment"),(0,a.kt)("h3",{id:"entity"},"Entity"),(0,a.kt)("h4",{id:"comwsscodepathom3entity-treeentity-tree"},(0,a.kt)("inlineCode",{parentName:"h4"},":com.wsscode.pathom3.entity-tree/entity-tree*")),(0,a.kt)("p",null,"This attribute contains the atom with the current entity data. As Pathom processes the\ngraph, new data gets merged into the entity."),(0,a.kt)("p",null,"You can find helpers to manipulate the entity in the ",(0,a.kt)("inlineCode",{parentName:"p"},"com.wsscode.pathom3.entity-tree"),"\nnamespace."),(0,a.kt)("h3",{id:"errors"},"Errors"),(0,a.kt)("h4",{id:"comwsscodepathom3errorlenient-mode"},(0,a.kt)("inlineCode",{parentName:"h4"},":com.wsscode.pathom3.error/lenient-mode?")),(0,a.kt)("p",null,"This attribute controls if Pathom should use lenient mode instead of strict mode.\nFor more details check the ",(0,a.kt)("a",{parentName:"p",href:"/docs/error-handling"},"error handling")," page."),(0,a.kt)("h3",{id:"indexes"},"Indexes"),(0,a.kt)("p",null,"Indexes should be present in all environments, given they are the center for connect\nprocessing"),(0,a.kt)("h4",{id:"comwsscodepathom3connectindexesindex-attributes"},(0,a.kt)("a",{parentName:"h4",href:"/docs/indexes#index-attributes"},(0,a.kt)("inlineCode",{parentName:"a"},":com.wsscode.pathom3.connect.indexes/index-attributes"))),(0,a.kt)("h4",{id:"comwsscodepathom3connectindexesindex-io"},(0,a.kt)("a",{parentName:"h4",href:"/docs/indexes#index-io"},(0,a.kt)("inlineCode",{parentName:"a"},":com.wsscode.pathom3.connect.indexes/index-io"))),(0,a.kt)("h4",{id:"comwsscodepathom3connectindexesindex-oir"},(0,a.kt)("a",{parentName:"h4",href:"/docs/indexes#index-oir"},(0,a.kt)("inlineCode",{parentName:"a"},":com.wsscode.pathom3.connect.indexes/index-oir"))),(0,a.kt)("h4",{id:"comwsscodepathom3connectindexesindex-resolvers"},(0,a.kt)("a",{parentName:"h4",href:"/docs/indexes#index-resolvers"},(0,a.kt)("inlineCode",{parentName:"a"},":com.wsscode.pathom3.connect.indexes/index-resolvers"))),(0,a.kt)("p",null,"For details on the indexes keys, check the ",(0,a.kt)("a",{parentName:"p",href:"/docs/indexes"},"indexes page"),"."),(0,a.kt)("h3",{id:"path"},"Path"),(0,a.kt)("h4",{id:"comwsscodepathom3pathpath"},(0,a.kt)("inlineCode",{parentName:"h4"},":com.wsscode.pathom3.path/path")),(0,a.kt)("p",null,"This attribute tells you which is the path of the current run process. It is a vector\ntelling the path from left to right. The following example does a simple demonstration\nof the path environment attribute."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-clojure"},"(ns com.wsscode.pathom.docs.environment-demo\n  (:require [com.wsscode.pathom3.connect.built-in.resolvers :as pbir]\n            [com.wsscode.pathom3.connect.indexes :as pci]\n            [com.wsscode.pathom3.connect.operation :as pco]\n            [com.wsscode.pathom3.interface.eql :as p.eql]\n            [com.wsscode.pathom3.path :as p.path]))\n\n(pco/defresolver env-path [{::p.path/keys [path]} _]\n  {::p.path/path path})\n\n(p.eql/process (pci/register [env-path\n                              (pbir/constantly-resolver ::data\n                                {::nested [{} {}]})])\n  [::p.path/path\n   {::data [::p.path/path\n            {::nested [::p.path/path]}]}])\n; => {::p.path/path\n;     []\n;\n;     ::data\n;     {::p.path/path\n;      [::data]\n;\n;      ::nested\n;      [{::p.path/path [::data ::nested]}\n;       {::p.path/path [::data ::nested]}]}}\n")),(0,a.kt)("h3",{id:"planner"},"Planner"),(0,a.kt)("h4",{id:"comwsscodepathom3connectplannergraph"},(0,a.kt)("inlineCode",{parentName:"h4"},":com.wsscode.pathom3.connect.planner/graph")),(0,a.kt)("p",null,"Contains the current execution plan in progress. You can find more details about the\nplan graph at the ",(0,a.kt)("a",{parentName:"p",href:"/docs/planner"},"planner page"),"."),(0,a.kt)("h4",{id:"comwsscodepathom3connectplannernode"},(0,a.kt)("inlineCode",{parentName:"h4"},":com.wsscode.pathom3.connect.planner/node")),(0,a.kt)("p",null,"The current ",(0,a.kt)("a",{parentName:"p",href:"/docs/planner#execution-node"},"execution node")," for the plan. This is useful\nto get more details from the resolver node run, like the parameters."),(0,a.kt)("h4",{id:"comwsscodepathom3connectplannerplan-cache"},(0,a.kt)("inlineCode",{parentName:"h4"},":com.wsscode.pathom3.connect.planner/plan-cache*")),(0,a.kt)("p",null,"This is an optional attribute, when present the planner will cache plans on it."),(0,a.kt)("p",null,"Here is an example of how to define an environment with a plan cache:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-clojure"},"(def indexes (pci/register ...))\n\n(def env-with-cache (pcp/with-plan-cache indexes))\n")),(0,a.kt)("p",null,"You can also create a shared cache and re-use in different environments:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-clojure"},"(defonce plan-cache* (atom {}))\n\n(def env-with-cache (pcp/with-plan-cache indexes plan-cache*))\n(def other-env-with-cache (pcp/with-plan-cache other-indexes plan-cache*))\n")))}h.isMDXComponent=!0}}]);