(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{105:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return d}));var i=n(0),a=n.n(i);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var b=a.a.createContext({}),s=function(e){var t=a.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return a.a.createElement(b.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},p=a.a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,b=c(e,["components","mdxType","originalType","parentName"]),u=s(n),p=i,d=u["".concat(l,".").concat(p)]||u[p]||m[p]||r;return n?a.a.createElement(d,o(o({ref:t},b),{},{components:n})):a.a.createElement(d,o({ref:t},b))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=p;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var b=2;b<r;b++)l[b]=n[b];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},98:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return s}));var i=n(2),a=n(6),r=(n(0),n(105)),l={title:"Rationale"},o={unversionedId:"rationale",id:"rationale",isDocsHomePage:!1,title:"Rationale",description:"- Eoliphat chat",source:"@site/docs/rationale.mdx",slug:"/rationale",permalink:"/docs/rationale",editUrl:"https://github.com/wilkerlucio/pathom3-docs/edit/master/docs/rationale.mdx",version:"current"},c=[{value:"Entity based modeling dominates the software industry",id:"entity-based-modeling-dominates-the-software-industry",children:[]},{value:"Pervasive Entity modeling",id:"pervasive-entity-modeling",children:[]},{value:"Our example, the music stream service",id:"our-example-the-music-stream-service",children:[{value:"Problem with implicit entities",id:"problem-with-implicit-entities",children:[]},{value:"Problem with explicit entities",id:"problem-with-explicit-entities",children:[]},{value:"Expose the issues",id:"expose-the-issues",children:[]}]},{value:"Show How Attribute modeling can change it",id:"show-how-attribute-modeling-can-change-it",children:[]},{value:"inspirations",id:"inspirations",children:[]},{value:"increase visibility of the information flow",id:"increase-visibility-of-the-information-flow",children:[]},{value:"Pathom schema is bottom-up",id:"pathom-schema-is-bottom-up",children:[]},{value:"Pathom design is about the relationship between attributes.",id:"pathom-design-is-about-the-relationship-between-attributes",children:[]},{value:"Schema",id:"schema",children:[]},{value:"Accessors",id:"accessors",children:[]},{value:"Implementors",id:"implementors",children:[]},{value:"Why Pathom?",id:"why-pathom",children:[{value:"Automated Controllers",id:"automated-controllers",children:[]},{value:"Clojure/script solution",id:"clojurescript-solution",children:[]}]}],b={rightToc:c};function s(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(r.b)("wrapper",Object(i.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Eoliphat chat")),Object(r.b)("p",null,"5 whys\n2nth order impact"),Object(r.b)("p",null,"Why I'm doing this?"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Processing complex information is hard")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Reference")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},'find examples online about bad "required"/"optional" cases'))),Object(r.b)("p",null,";; idea for example: YNAB reconciliation with bank data"),Object(r.b)("p",null,"The inspiration for Pathom attribute modeling comes from ",Object(r.b)("a",Object(i.a)({parentName:"p"},{href:"https://www.w3.org/RDF/"}),"RDF"),",\n",Object(r.b)("a",Object(i.a)({parentName:"p"},{href:"https://www.datomic.com/"}),"Datomic")," and ",Object(r.b)("a",Object(i.a)({parentName:"p"},{href:"https://clojure.org/guides/spec"}),"Spec"),"."),Object(r.b)("h1",{id:"talking-with-thome"},"Talking with Thome"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"bring problems of entity modeling"),Object(r.b)("li",{parentName:"ul"},"entity modeling is not just OOP",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"C structs are entities"),Object(r.b)("li",{parentName:"ul"},"REST endpoints are mostly entities")))),Object(r.b)("p",null,"Pain points"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Implicit Entity Modeling (Duck Typing)",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"JS"),Object(r.b)("li",{parentName:"ul"},"Ruby"),Object(r.b)("li",{parentName:"ul"},"Clojure*\n...")))),Object(r.b)("p",null,":track/id\n:track/duration"),Object(r.b)("p",null,":foreign-track/duration"),Object(r.b)("p",null,"Track"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"id"),Object(r.b)("li",{parentName:"ul"},"title"),Object(r.b)("li",{parentName:"ul"},"duration")),Object(r.b)("p",null,"integration between companies, integrating the data"),Object(r.b)("p",null,"ForeignTrack"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"id"),Object(r.b)("li",{parentName:"ul"},"title"),Object(r.b)("li",{parentName:"ul"},"duration")),Object(r.b)("p",null,"DurationItem {\nduration: int;\n}"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{}),"fn human-track-duration(track) {\n  makeHuman(track.duration)\n}\n\n:foreign-track/duration -> :track/duration\n\nfn human-track-duration(:track/duration) {\n  makeHuman(track.duration)\n}\n\nfn operation(AudioFeaturesInterface) {\n\n}\n")),Object(r.b)("p",null," REQUIRED / OPTIONAL"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Explicit Entity Modeling (more like OOP)",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Typescript"),Object(r.b)("li",{parentName:"ul"},"GraphQL"),Object(r.b)("li",{parentName:"ul"},"Swift\n...")))),Object(r.b)("h1",{id:"modeling-data-with-attributes"},"Modeling data with attributes"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"plan",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"make logic example"),Object(r.b)("li",{parentName:"ul"},"point associations"),Object(r.b)("li",{parentName:"ul"},"demo that entity model makes difficult to make this happen"),Object(r.b)("li",{parentName:"ul"},"pathom to save the day")))),Object(r.b)("p",null,"-- trying to get some example on how we deal with logic property inferences on day to day"),Object(r.b)("p",null,"Soraya is 29 years old."),Object(r.b)("p",null,"The Clojure keywords have a built-in separation of namespace and name, and Pathom leverages\nit."),Object(r.b)("p",null,"The answer is surprisingly simple: make attribute names bigger!"),Object(r.b)("p",null,"How big? It needs to big enough to avoid ambiguity."),Object(r.b)("hr",null),Object(r.b)("p",null,"Many ways to identify you:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Your social security number"),Object(r.b)("li",{parentName:"ul"},"Insurance number"),Object(r.b)("li",{parentName:"ul"},"Email"),Object(r.b)("li",{parentName:"ul"},"Address (if you live by yourself)"),Object(r.b)("li",{parentName:"ul"})),Object(r.b)("h1",{id:"challenges-to-integrate-distributed-data"},"Challenges to integrate distributed data"),Object(r.b)("h2",{id:"entity-based-modeling-dominates-the-software-industry"},"Entity based modeling dominates the software industry"),Object(r.b)("h1",{id:"abstract"},"Abstract"),Object(r.b)("p",null,"Pathom is a logical design model implemented in Clojure/script. It is designed to eliminate the\ncode related to composing functions in the information layer of your program."),Object(r.b)("h2",{id:"pervasive-entity-modeling"},"Pervasive Entity modeling"),Object(r.b)("p",null,"Entity model is a way of thinking about information in terms of entities. We can see\nthis model in almost every kind of software created today."),Object(r.b)("div",{className:"admonition admonition-important alert alert--info"},Object(r.b)("div",Object(i.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(i.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(i.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(i.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"important")),Object(r.b)("div",Object(i.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"I'll be talking about entity modeling only in the context of information modeling."))),Object(r.b)("p",null,"I like to bring attention to some challenges that I face when I use this method of\nthinking to design information systems."),Object(r.b)("h2",{id:"our-example-the-music-stream-service"},"Our example, the music stream service"),Object(r.b)("p",null,"To illustrate the challenges I'll model a generic music stream service:"),Object(r.b)("p",null,"IMAGE_HERE"),Object(r.b)("p",null,";;; because I can compare with Apple Music, or Google Play"),Object(r.b)("h3",{id:"problem-with-implicit-entities"},"Problem with implicit entities"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"you never know if that attribute is really what you expect")),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-ruby"}),'def full_name(person)\n  person.first_name + " " + person.last_name\nend\n')),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-typescript"}),'class Person {\n  id: string;\n  firstName: string;\n  lastName: string;\n}\n\ninterface Nameable {\n  firstName: string;\n  lastName: string;\n}\n\nfunction fullName (person: Person): string {\n  return person.firstName + " " + person.lastName\n}\n\nfunction fullName (person): string {\n  return person.firstName + " " + person.lastName\n}\n')),Object(r.b)("h3",{id:"problem-with-explicit-entities"},"Problem with explicit entities"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"refactoring is a pain in the ass")),Object(r.b)("h3",{id:"expose-the-issues"},"Expose the issues"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"repeated types"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"simplified types"),Object(r.b)("li",{parentName:"ul"},"required vs optional"),Object(r.b)("li",{parentName:"ul"},"repetition of attribute definition\n-- common pattern, add the ",Object(r.b)("inlineCode",{parentName:"li"},"type")," attribute"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"connecting different entities")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"operations are tied by entity")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"extracting interfaces is expensive"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"fields with same name, same semantic, different value unit",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"I heard some astronalts had to deal with this"))))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"distinct teams trying to split the same interface")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"hard to cross language boundaries")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"its pervasive even when types are implicit"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"in JS for example, when a fn requires an id, you assume it its the right kind of id\nbecause its implicit (sometimes from the fn name, like userById()).")))),Object(r.b)("p",null,"when people are afraid of that, then they turn to TypeScript, with Typescript the type\nis explicit, so in this way a compiler can ensure you are consistent with your definitions."),Object(r.b)("p",null,"situation where we have to integrate with a remote API"),Object(r.b)("p",null,"GraphQL brought the same entity modeling to the wire. The good thing is that the model\nis now visible."),Object(r.b)("h2",{id:"show-how-attribute-modeling-can-change-it"},"Show How Attribute modeling can change it"),Object(r.b)("p",null,"Demo the initial tables, and convert to properties"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"first prefix every property inside the entity with something"),Object(r.b)("li",{parentName:"ul"},"then remove the boxes"),Object(r.b)("li",{parentName:"ul"},"now demonstrate how operations get connected directly to attributes")),Object(r.b)("p",null,"then we only need to connect the parts that our systems need to care about"),Object(r.b)("p",null,"trivial to alias attributes"),Object(r.b)("p",null,"never have to compromise some interface for convenience"),Object(r.b)("p",null,"render page from song"),Object(r.b)("h2",{id:"inspirations"},"inspirations"),Object(r.b)("p",null,"Datomic\nRDF\nSpec"),Object(r.b)("h2",{id:"increase-visibility-of-the-information-flow"},"increase visibility of the information flow"),Object(r.b)("h2",{id:"pathom-schema-is-bottom-up"},"Pathom schema is bottom-up"),Object(r.b)("p",null,"It is common for systems to first define a schema, and later they implement that schema\nin some way. In Pathom, the schema is defined by the resolvers upon registration, it\nis more like something that gets add, instead of planned ahead."),Object(r.b)("h2",{id:"pathom-design-is-about-the-relationship-between-attributes"},"Pathom design is about the relationship between attributes."),Object(r.b)("p",null,"In Pathom, the resolvers are responsible for defining the attribute connections."),Object(r.b)("p",null,"Instead of doing schema first, and then implementation, in Pathom, resolvers\ndefine the schema upon registration."),Object(r.b)("h1",{id:"the-problem-through-example"},"The problem through example"),Object(r.b)("p",null,"To understand the reasoning around Pathom, let's split our definition of code in two types: Implementors and Composers."),Object(r.b)("h2",{id:"schema"},"Schema"),Object(r.b)("h2",{id:"accessors"},"Accessors"),Object(r.b)("h2",{id:"implementors"},"Implementors"),Object(r.b)("p",null,"Those are functions that do actual work, like:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Reading data from a database"),Object(r.b)("li",{parentName:"ul"},"Transforming data"),Object(r.b)("li",{parentName:"ul"},"Running calculations")),Object(r.b)("p",null,"This is to me where most of the fun in coding is, the real specific logic about your\napplication."),Object(r.b)("h2",{id:"why-pathom"},"Why Pathom?"),Object(r.b)("p",null,"I did"),Object(r.b)("h3",{id:"automated-controllers"},"Automated Controllers"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"A lot of errors in software come from small mistakes when connecting functions in controllers")),Object(r.b)("h3",{id:"clojurescript-solution"},"Clojure/script solution"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"With support")))}s.isMDXComponent=!0}}]);