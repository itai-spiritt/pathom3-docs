(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{105:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return b}));var o=n(0),a=n.n(o);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},c=Object.keys(e);for(o=0;o<c.length;o++)n=c[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(o=0;o<c.length;o++)n=c[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=a.a.createContext({}),d=function(e){var t=a.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=d(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=a.a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,c=e.originalType,r=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),l=d(n),u=o,b=l["".concat(r,".").concat(u)]||l[u]||m[u]||c;return n?a.a.createElement(b,i(i({ref:t},p),{},{components:n})):a.a.createElement(b,i({ref:t},p))}));function b(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=n.length,r=new Array(c);r[0]=u;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,r[1]=i;for(var p=2;p<c;p++)r[p]=n[p];return a.a.createElement.apply(null,r)}return a.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},53:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return d}));var o=n(2),a=n(6),c=(n(0),n(105)),r={id:"indexes",title:"Indexes"},i={unversionedId:"indexes",id:"indexes",isDocsHomePage:!1,title:"Indexes",description:"To make efficient lookups, Pathom uses a series of indexes generated from the user",source:"@site/docs/indexes.mdx",slug:"/indexes",permalink:"/docs/indexes",editUrl:"https://github.com/wilkerlucio/pathom3-docs/edit/master/docs/indexes.mdx",version:"current",sidebar:"docs",previous:{title:"Dynamic Resolvers",permalink:"/docs/dynamic-resolvers"},next:{title:"Planner",permalink:"/docs/planner"}},s=[{value:"index-oir",id:"index-oir",children:[]},{value:"index-io",id:"index-io",children:[]},{value:"index-attributes",id:"index-attributes",children:[]},{value:"index-resolvers",id:"index-resolvers",children:[]}],p={rightToc:s};function d(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(c.b)("wrapper",Object(o.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"To make efficient lookups, Pathom uses a series of indexes generated from the user\n",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"/docs/resolvers"}),"resolvers"),"."),Object(c.b)("h2",{id:"index-oir"},"index-oir"),Object(c.b)("p",null,"This is the most important index to understand how Pathom processes the data."),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"oir")," stands for ",Object(c.b)("inlineCode",{parentName:"p"},"output")," \u2192 ",Object(c.b)("inlineCode",{parentName:"p"},"input")," \u2192 ",Object(c.b)("inlineCode",{parentName:"p"},"resolver"),"."),Object(c.b)("p",null,"In other words, this is the index that tells Pathom which are the paths available to\nreach a given attribute in the system."),Object(c.b)("p",null,"Let's look at an example and talk over it:"),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-clojure"}),"; for this resolver\n(pco/defresolver product-by-id [{:keys [acme.product/id]}]\n  {::pco/input  [:acme.product/id]\n   ::pco/output [:acme.product/name\n                 :acme.product/price\n                 :acme.product/in-stock?]}\n  (fetch-product id))\n\n; we get this index-oir\n{:com.wsscode.pathom3.connect.indexes/index-oir\n {:acme.product/name      {{:acme.product/id {}} #{product-by-id}}\n  :acme.product/price     {{:acme.product/id {}} #{product-by-id}}\n  :acme.product/in-stock? {{:acme.product/id {}} #{product-by-id}}}}\n")),Object(c.b)("p",null,"With this index, Pathom can ask: How can I fetch ",Object(c.b)("inlineCode",{parentName:"p"},":acme.product/price")," in the system?\nFor which the answer is:"),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-clojure"}),"{{:acme.product/id {}} #{product-by-id}}\n")),Object(c.b)("p",null,"Or in plain english: The index says you can fetch the product price, given you provide some\nproduct id, using the edge ",Object(c.b)("inlineCode",{parentName:"p"},"product-by-id"),"."),Object(c.b)("p",null,"The input in this index uses the ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"/docs/shape-descriptor"}),"shape descriptor")," format."),Object(c.b)("p",null,"This is an overview of this index, for more details on how the planner uses it, check\nthe ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"/docs/planner"}),"planner page"),"."),Object(c.b)("h2",{id:"index-io"},"index-io"),Object(c.b)("p",null,"This index tells, for given attribute set (with empty, one or more items), which attributes\nare ",Object(c.b)("strong",{parentName:"p"},"directly reachable")," (one resolver distance) from that set."),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"io")," stands for ",Object(c.b)("inlineCode",{parentName:"p"},"input")," \u2192 ",Object(c.b)("inlineCode",{parentName:"p"},"output"),"."),Object(c.b)("p",null,"Here is what ",Object(c.b)("inlineCode",{parentName:"p"},"index-io")," looks like, using the same resolver from our previous example:"),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-clojure"}),"{:com.wsscode.pathom3.connect.indexes/index-io\n {#{:acme.product/id}\n  {:acme.product/name      {}\n   :acme.product/price     {}\n   :acme.product/in-stock? {}}}}\n")),Object(c.b)("p",null,"The ",Object(c.b)("inlineCode",{parentName:"p"},"output")," part uses the ",Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"/docs/shape-descriptor"}),"shape descriptor")," format."),Object(c.b)("p",null,Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"/docs/smart-maps"}),"Smart maps"),' use this index to figure reachable attributes when used in "reachable mode".'),Object(c.b)("p",null,"This is a good index to create auto-complete features in editors for Pathom integration."),Object(c.b)("h2",{id:"index-attributes"},"index-attributes"),Object(c.b)("p",null,"This index contains accumulated information about how a specific attribute relates to\nother attributes and resolvers."),Object(c.b)("p",null,"Let's use the ",Object(c.b)("inlineCode",{parentName:"p"},"full-name")," resolver example to demonstrate the index-attributes at play:"),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-clojure"}),'(pco/defresolver full-name [{::keys [first-name last-name]}]\n  {::full-name (str first-name " " last-name)})\n\n{:com.wsscode.pathom3.connect.indexes/index-attributes\n {#{::first-name ::last-name} {:com.wsscode.pathom3.connect.indexes/attr-id       #{::first-name ::last-name}\n                               :com.wsscode.pathom3.connect.indexes/attr-provides {::full-name #{:full-name}}\n                               :com.wsscode.pathom3.connect.indexes/attr-input-in #{full-name}}\n  ::first-name                {:com.wsscode.pathom3.connect.indexes/attr-id           ::first-name\n                               :com.wsscode.pathom3.connect.indexes/attr-combinations #{#{::first-name ::last-name}}\n                               :com.wsscode.pathom3.connect.indexes/attr-input-in     #{full-name}}\n  ::last-name                 {:com.wsscode.pathom3.connect.indexes/attr-id           ::last-name\n                               :com.wsscode.pathom3.connect.indexes/attr-combinations #{#{::first-name ::last-name}}\n                               :com.wsscode.pathom3.connect.indexes/attr-input-in     #{full-name}}\n  ::full-name                 {:com.wsscode.pathom3.connect.indexes/attr-id        ::full-name\n                               :com.wsscode.pathom3.connect.indexes/attr-reach-via {#{::first-name ::last-name} #{full-name}}\n                               :com.wsscode.pathom3.connect.indexes/attr-output-in #{full-name}}}}\n')),Object(c.b)("p",null,"The first level of the index is the attribute itself, the details we can explain key by\nkey:"),Object(c.b)("h4",{id:"comwsscodepathom3connectindexesattr-id"},Object(c.b)("inlineCode",{parentName:"h4"},":com.wsscode.pathom3.connect.indexes/attr-id")),Object(c.b)("p",null,"Contains the ID of the attribute, it may be a keyword (as seen in the example) or also\na set in cases of attribute combinations."),Object(c.b)("h4",{id:"comwsscodepathom3connectindexesattr-input-in"},Object(c.b)("inlineCode",{parentName:"h4"},":com.wsscode.pathom3.connect.indexes/attr-input-in")),Object(c.b)("p",null,"A set containing a list of all resolvers in which this attribute appears as an input."),Object(c.b)("h4",{id:"comwsscodepathom3connectindexesattr-output-in"},Object(c.b)("inlineCode",{parentName:"h4"},":com.wsscode.pathom3.connect.indexes/attr-output-in")),Object(c.b)("p",null,"A set containing a list of all resolvers in which this attribute appears as an output."),Object(c.b)("h4",{id:"comwsscodepathom3connectindexesattr-provides"},Object(c.b)("inlineCode",{parentName:"h4"},":com.wsscode.pathom3.connect.indexes/attr-provides")),Object(c.b)("p",null,"This is a sub-index, telling what other attributes are reachable from this attribute, by\nwhich resolver."),Object(c.b)("h4",{id:"comwsscodepathom3connectindexesattr-reach-via"},Object(c.b)("inlineCode",{parentName:"h4"},":com.wsscode.pathom3.connect.indexes/attr-reach-via")),Object(c.b)("p",null,"This is a sub-index, telling what other attributes you can use to reach the current, by\nwhich resolver."),Object(c.b)("h4",{id:"comwsscodepathom3connectindexesattr-combinations"},Object(c.b)("inlineCode",{parentName:"h4"},":com.wsscode.pathom3.connect.indexes/attr-combinations")),Object(c.b)("p",null,"A set with all the input combinations that this attribute appears in."),Object(c.b)("h2",{id:"index-resolvers"},"index-resolvers"),Object(c.b)("p",null,"In this index you can lookup resolvers by their name. Using both ",Object(c.b)("inlineCode",{parentName:"p"},"product-by-id")," and\n",Object(c.b)("inlineCode",{parentName:"p"},"full-name")," resolvers, this is what the ",Object(c.b)("inlineCode",{parentName:"p"},"index-resolvers")," looks like:"),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-clojure"}),"{:com.wsscode.pathom3.connect.indexes/index-resolvers\n {product-by-id\n  #com.wsscode.pathom3.connect.operation.Resolver\n  {:config  {:com.wsscode.pathom3.connect.operation/input    [:acme.product/id]\n             :com.wsscode.pathom3.connect.operation/requires {:acme.product/id {}}\n             :com.wsscode.pathom3.connect.operation/output   [:acme.product/name :acme.product/price :acme.product/in-stock?]\n             :com.wsscode.pathom3.connect.operation/provides {:acme.product/name      {}\n                                                              :acme.product/price     {}\n                                                              :acme.product/in-stock? {}}\n             :com.wsscode.pathom3.connect.operation/op-name  product-by-id}\n   :resolve product-by-id--23075}\n\n  full-name\n  #com.wsscode.pathom3.connect.operation.Resolver\n  {:config  {:com.wsscode.pathom3.connect.operation/input    [::first-name ::last-name]\n             :com.wsscode.pathom3.connect.operation/requires {::first-name {} ::last-name {}}\n             :com.wsscode.pathom3.connect.operation/output   [::full-name]\n             :com.wsscode.pathom3.connect.operation/provides {::full-name {}}\n             :com.wsscode.pathom3.connect.operation/op-name  full-name}\n   :resolve full-name--23079}}}\n")))}d.isMDXComponent=!0}}]);