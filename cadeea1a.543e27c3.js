(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{105:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return b}));var o=t(0),r=t.n(o);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var d=r.a.createContext({}),l=function(e){var n=r.a.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=l(e.components);return r.a.createElement(d.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},u=r.a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=l(t),u=o,b=p["".concat(c,".").concat(u)]||p[u]||m[u]||a;return t?r.a.createElement(b,i(i({ref:n},d),{},{components:t})):r.a.createElement(b,i({ref:n},d))}));function b(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,c=new Array(a);c[0]=u;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var d=2;d<a;d++)c[d]=t[d];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},89:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return c})),t.d(n,"metadata",(function(){return i})),t.d(n,"rightToc",(function(){return s})),t.d(n,"default",(function(){return l}));var o=t(2),r=t(6),a=(t(0),t(105)),c={title:"Foreign Environments"},i={unversionedId:"foreign",id:"foreign",isDocsHomePage:!1,title:"Foreign Environments",description:"Foreign parsers is a sub-system of Dynamic Resolvers, which are still in research/experimental",source:"@site/docs/foreign.mdx",slug:"/foreign",permalink:"/docs/foreign",editUrl:"https://github.com/wilkerlucio/pathom3-docs/edit/master/docs/foreign.mdx",version:"current",sidebar:"docs",previous:{title:"Debugging",permalink:"/docs/debugging"},next:{title:"Dynamic Resolvers",permalink:"/docs/dynamic-resolvers"}},s=[{value:"Foreign setup",id:"foreign-setup",children:[]},{value:"How it works",id:"how-it-works",children:[]},{value:"Foreign HTTP Example",id:"foreign-http-example",children:[]}],d={rightToc:s};function l(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},d,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("div",{className:"admonition admonition-danger alert alert--danger"},Object(a.b)("div",Object(o.a)({parentName:"div"},{className:"admonition-heading"}),Object(a.b)("h5",{parentName:"div"},Object(a.b)("span",Object(o.a)({parentName:"h5"},{className:"admonition-icon"}),Object(a.b)("svg",Object(o.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(a.b)("path",Object(o.a)({parentName:"svg"},{fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"})))),"danger")),Object(a.b)("div",Object(o.a)({parentName:"div"},{className:"admonition-content"}),Object(a.b)("p",{parentName:"div"},"Foreign parsers is a sub-system of ",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"/docs/dynamic-resolvers"}),"Dynamic Resolvers"),", which are still in research/experimental\nstages."))),Object(a.b)("p",null,"Foreign Pathom is the ability of Pathom 3 to make automatic integration between different\nPathom environments."),Object(a.b)("p",null,"This mechanism provides a simple way to connect resolvers that may run in completely different\ncontexts (different machines or processes)."),Object(a.b)("h2",{id:"foreign-setup"},"Foreign setup"),Object(a.b)("p",null,"To demonstrate it working, let's start with some resolvers to list some TODO ids and\nanother resolver to pull the TODO details."),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-clojure"}),'(ns com.wsscode.pathom3.docs.demos.core.foreign\n  (:require [com.wsscode.pathom3.connect.operation :as pco]\n            [com.wsscode.pathom3.connect.indexes :as pci]\n            [com.wsscode.pathom3.interface.eql :as p.eql]\n            [com.wsscode.pathom3.connect.foreign :as pcf]))\n\n(def todo-db\n  {1 {:todo/id    1\n      :todo/title "Write foreign docs"\n      :todo/done? true}\n   2 {:todo/id    2\n      :todo/title "Integrate the whole internet"\n      :todo/done? false}})\n\n(pco/defresolver todo-items []\n  {::pco/output\n   [{:app/all-todos\n     [:todo/id]}]}\n  ; export only the ids to force the usage of another resolver for\n  ; the details\n  {:app/all-todos\n   [{:todo/id 1}\n    {:todo/id 2}]})\n\n(pco/defresolver todo-by-id [{:todo/keys [id]}]\n  {::pco/output\n   [:todo/id\n    :todo/title\n    :todo/done?]}\n  (get todo-db id))\n\n(def foreign-env\n  (pci/register\n    {:com.wsscode.pathom3.connect.planner/plan-cache* (atom {})}\n    [todo-items\n     todo-by-id]))\n\n(def foreign-request\n  (p.eql/boundary-interface foreign-env))\n\n(comment\n  (foreign-request\n    [{:app/all-todos\n      [:todo/title\n       :todo/done?]}]))\n')),Object(a.b)("p",null,"Now we are going to start a new Pathom environment, connect and\nextend the previous one. The local extension will add the ability to know if a TODO\nitem was cancelled. You can imagine this is a separate service responsible for the\ncancellation part of this hypothetical system."),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-clojure"}),"(def canceled-todos\n  #{2})\n\n(pco/defresolver todo-canceled? [{:todo/keys [id]}]\n  {:todo/cancelled? (contains? canceled-todos id)})\n\n(def local-env\n  (pci/register\n    {:com.wsscode.pathom3.connect.planner/plan-cache* (atom {})}\n    [; pull the remote instance\n     (pcf/foreign-register foreign-request)\n     ; add our custom resolver on top\n     todo-canceled?]))\n")),Object(a.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(a.b)("div",Object(o.a)({parentName:"div"},{className:"admonition-heading"}),Object(a.b)("h5",{parentName:"div"},Object(a.b)("span",Object(o.a)({parentName:"h5"},{className:"admonition-icon"}),Object(a.b)("svg",Object(o.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(a.b)("path",Object(o.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(a.b)("div",Object(o.a)({parentName:"div"},{className:"admonition-content"}),Object(a.b)("p",{parentName:"div"},"Using the boundary interface ensures the request handler fulfills the\nexpected contract when calling a remote Pathom instance."))),Object(a.b)("h2",{id:"how-it-works"},"How it works"),Object(a.b)("p",null,"When we use ",Object(a.b)("inlineCode",{parentName:"p"},"(pcf/foreign-register foreign-request)"),", it makes a request that asks\nfor the indexes available in that instance."),Object(a.b)("p",null,"You can try it yourself by requesting the query:"),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-clojure"}),"[:com.wsscode.pathom3.connect.indexes/indexes]\n")),Object(a.b)("p",null,"Pathom them transform the indexes in dynamic resolvers and\nwe add these new indexes using ",Object(a.b)("inlineCode",{parentName:"p"},"pci/register"),"."),Object(a.b)("p",null,"Check the ",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"/docs/dynamic-resolvers"}),"dynamic resolvers documentation")," for more details\nabout this process."),Object(a.b)("h2",{id:"foreign-http-example"},"Foreign HTTP Example"),Object(a.b)("p",null,"It's important to note that the foreign environment might well be in a different machine.\nThe integration process is serializable, and can work over the network."),Object(a.b)("p",null,"I have this same example deployed at ",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"https://southamerica-east1-pathomdemos.cloudfunctions.net/development-pathom-server-demo"}),"https://southamerica-east1-pathomdemos.cloudfunctions.net/development-pathom-server-demo")),Object(a.b)("p",null,"Here is how we can do this integration using this HTTP based communication:"),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-clojure"}),'(ns com.wsscode.pathom3.docs.demos.core.foreign\n  (:require\n    [com.wsscode.pathom3.connect.foreign :as pcf]\n    [com.wsscode.pathom3.connect.indexes :as pci]\n    [com.wsscode.pathom3.connect.operation :as pco]\n    [com.wsscode.pathom3.connect.operation.transit :as pcot]\n    [com.wsscode.pathom3.interface.eql :as p.eql]\n    [com.wsscode.transito :as transito]\n    [org.httpkit.client :as http]))\n\n(defn tread [s]\n  (transito/read-str s {:handlers pcot/read-handlers}))\n\n(defn twrite [x]\n  (transito/write-str x {:handlers pcot/write-handlers}))\n\n; helper to deal with encoding, sending via HTTP and decoding\n(defn request-remote-pathom [url request]\n  (-> @(http/request\n         {:url     url\n          :method  :post\n          :headers {"Content-Type" "application/transit+json"\n                    "Accept"       "application/transit+json"}\n          :body    (twrite request)})\n      :body\n      tread))\n\n(def canceled-todos\n  #{2})\n\n(pco/defresolver todo-canceled? [{:todo/keys [id]}]\n  {:todo/cancelled? (contains? canceled-todos id)})\n\n(def url "https://southamerica-east1-pathomdemos.cloudfunctions.net/development-pathom-server-demo")\n\n(def env\n  (pci/register\n    {:com.wsscode.pathom3.connect.planner/plan-cache* (atom {})}\n    [; pull the remote instance\n     (pcf/foreign-register\n       #(request-remote-pathom url %))\n     ; add our custom resolver on top\n     todo-canceled?]))\n\n(comment\n  (p.eql/process\n    env\n    [{:app/all-todos\n      [:todo/title\n       :todo/done?\n       :todo/cancelled?]}]))\n')))}l.isMDXComponent=!0}}]);